/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { AuthMe, AuthMeInterface } from "../../contracts/AuthMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startWith",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "times",
        type: "uint256",
      },
    ],
    name: "MintAuth",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxNfts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numNfts",
        type: "uint256",
      },
    ],
    name: "mintNfts",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalNfts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052620186a06009556005600a55655af3107a4000600b553480156200002757600080fd5b5060405162001c3338038062001c338339810160408190526200004a91620001d7565b33838360006200005b8382620002f7565b5060016200006a8282620002f7565b5050506001600160a01b0381166200009c57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000a781620000c0565b50600c620000b68282620002f7565b50505050620003c3565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013a57600080fd5b81516001600160401b038082111562000157576200015762000112565b604051601f8301601f19908116603f0116810190828211818310171562000182576200018262000112565b816040528381526020925086838588010111156200019f57600080fd5b600091505b83821015620001c35785820183015181830184015290820190620001a4565b600093810190920192909252949350505050565b600080600060608486031215620001ed57600080fd5b83516001600160401b03808211156200020557600080fd5b620002138783880162000128565b945060208601519150808211156200022a57600080fd5b620002388783880162000128565b935060408601519150808211156200024f57600080fd5b506200025e8682870162000128565b9150509250925092565b600181811c908216806200027d57607f821691505b6020821081036200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f257600081815260208120601f850160051c81016020861015620002cd5750805b601f850160051c820191505b81811015620002ee57828155600101620002d9565b5050505b505050565b81516001600160401b0381111562000313576200031362000112565b6200032b8162000324845462000268565b84620002a4565b602080601f8311600181146200036357600084156200034a5750858301515b600019600386901b1c1916600185901b178555620002ee565b600085815260208120601f198616915b82811015620003945788860151825594840194600190910190840162000373565b5085821015620003b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61186080620003d36000396000f3fe6080604052600436106101815760003560e01c806370a08231116100d1578063a22cb4651161008a578063c87b56dd11610064578063c87b56dd1461042f578063dba433fc1461044f578063e985e9c514610462578063f2fde38b1461048257600080fd5b8063a22cb465146103cf578063a2b40d19146103ef578063b88d4fde1461040f57600080fd5b806370a082311461033b578063715018a61461035b5780638da5cb5b1461037057806393f344c11461038e57806395d89b41146103a4578063a035b1fe146103b957600080fd5b806318160ddd1161013e57806355f804b31161011857806355f804b3146102d05780636352211e146102f057806367765b87146103105780636c0360eb1461032657600080fd5b806318160ddd1461027b57806323b872dd1461029057806342842e0e146102b057600080fd5b806301ffc9a71461018657806306fdde03146101bb578063081812fc146101dd578063095ea7b3146102155780630d4f9ddb14610237578063162094c41461025b575b600080fd5b34801561019257600080fd5b506101a66101a13660046112b7565b6104a2565b60405190151581526020015b60405180910390f35b3480156101c757600080fd5b506101d06104cd565b6040516101b29190611324565b3480156101e957600080fd5b506101fd6101f8366004611337565b61055f565b6040516001600160a01b0390911681526020016101b2565b34801561022157600080fd5b5061023561023036600461136c565b610588565b005b34801561024357600080fd5b5061024d60085481565b6040519081526020016101b2565b34801561026757600080fd5b50610235610276366004611442565b610597565b34801561028757600080fd5b5060085461024d565b34801561029c57600080fd5b506102356102ab366004611489565b6105a9565b3480156102bc57600080fd5b506102356102cb366004611489565b610639565b3480156102dc57600080fd5b506102356102eb3660046114c5565b610659565b3480156102fc57600080fd5b506101fd61030b366004611337565b61066d565b34801561031c57600080fd5b5061024d600a5481565b34801561033257600080fd5b506101d0610678565b34801561034757600080fd5b5061024d6103563660046114fa565b610706565b34801561036757600080fd5b5061023561074e565b34801561037c57600080fd5b506007546001600160a01b03166101fd565b34801561039a57600080fd5b5061024d60095481565b3480156103b057600080fd5b506101d0610762565b3480156103c557600080fd5b5061024d600b5481565b3480156103db57600080fd5b506102356103ea366004611515565b610771565b3480156103fb57600080fd5b5061023561040a366004611337565b61077c565b34801561041b57600080fd5b5061023561042a366004611551565b610789565b34801561043b57600080fd5b506101d061044a366004611337565b6107a0565b61023561045d366004611337565b6108a4565b34801561046e57600080fd5b506101a661047d3660046115cd565b610a60565b34801561048e57600080fd5b5061023561049d3660046114fa565b610a8e565b60006001600160e01b03198216632483248360e11b14806104c757506104c782610acc565b92915050565b6060600080546104dc90611600565b80601f016020809104026020016040519081016040528092919081815260200182805461050890611600565b80156105555780601f1061052a57610100808354040283529160200191610555565b820191906000526020600020905b81548152906001019060200180831161053857829003601f168201915b5050505050905090565b600061056a82610b1c565b506000828152600460205260409020546001600160a01b03166104c7565b610593828233610b55565b5050565b61059f610b62565b6105938282610b8f565b6001600160a01b0382166105d857604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006105e5838333610bdf565b9050836001600160a01b0316816001600160a01b031614610633576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016105cf565b50505050565b61065483838360405180602001604052806000815250610789565b505050565b610661610b62565b600c6105938282611688565b60006104c782610b1c565b600c805461068590611600565b80601f01602080910402602001604051908101604052809291908181526020018280546106b190611600565b80156106fe5780601f106106d3576101008083540402835291602001916106fe565b820191906000526020600020905b8154815290600101906020018083116106e157829003601f168201915b505050505081565b60006001600160a01b038216610732576040516322718ad960e21b8152600060048201526024016105cf565b506001600160a01b031660009081526003602052604090205490565b610756610b62565b6107606000610cd8565b565b6060600180546104dc90611600565b610593338383610d2a565b610784610b62565b600b55565b6107948484846105a9565b61063384848484610dc9565b60606107ab82610b1c565b50600082815260066020526040812080546107c590611600565b80601f01602080910402602001604051908101604052809291908181526020018280546107f190611600565b801561083e5780601f106108135761010080835404028352916020019161083e565b820191906000526020600020905b81548152906001019060200180831161082157829003601f168201915b50505050509050600061084f610ef2565b90508051600003610861575092915050565b81511561089357808260405160200161087b929190611748565b60405160208183030381529060405292505050919050565b61089c84610f01565b949350505050565b6000811180156108b65750600a548111155b6109195760405162461bcd60e51b815260206004820152602e60248201527f4d757374206d696e742061206d696e696d756d206f66203120616e64206d617860448201526d696d756d206f662035204e46547360901b60648201526084016105cf565b6009548160085461092a919061178d565b111561096d5760405162461bcd60e51b815260206004820152601260248201527113585e081cdd5c1c1b1e481c995858da195960721b60448201526064016105cf565b600b5461097a90826117a0565b34146109c05760405162461bcd60e51b8152602060048201526015602482015274496e636f72726563742065746865722076616c756560581b60448201526064016105cf565b6007546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156109f9573d6000803e3d6000fd5b5060085433907f76ba2656e1e5dcb306e5486f5e07dfd694e175f634e585977b9052699a5a13c090610a2c90600161178d565b60408051918252602082018590520160405180910390a260005b818110156105935780610a58816117b7565b915050610a46565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610a96610b62565b6001600160a01b038116610ac057604051631e4fbdf760e01b8152600060048201526024016105cf565b610ac981610cd8565b50565b60006001600160e01b031982166380ac58cd60e01b1480610afd57506001600160e01b03198216635b5e139f60e01b145b806104c757506301ffc9a760e01b6001600160e01b03198316146104c7565b6000818152600260205260408120546001600160a01b0316806104c757604051637e27328960e01b8152600481018490526024016105cf565b6106548383836001610f69565b6007546001600160a01b031633146107605760405163118cdaa760e01b81523360048201526024016105cf565b6000828152600660205260409020610ba78282611688565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6000828152600260205260408120546001600160a01b0390811690831615610c0c57610c0c81848661106f565b6001600160a01b03811615610c4a57610c29600085600080610f69565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610c79576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610d5c57604051630b61174360e31b81526001600160a01b03831660048201526024016105cf565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561063357604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610e0b9033908890879087906004016117d0565b6020604051808303816000875af1925050508015610e46575060408051601f3d908101601f19168201909252610e439181019061180d565b60015b610eaf573d808015610e74576040519150601f19603f3d011682016040523d82523d6000602084013e610e79565b606091505b508051600003610ea757604051633250574960e11b81526001600160a01b03851660048201526024016105cf565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610eeb57604051633250574960e11b81526001600160a01b03851660048201526024016105cf565b5050505050565b6060600c80546104dc90611600565b6060610f0c82610b1c565b506000610f17610ef2565b90506000815111610f375760405180602001604052806000815250610f62565b80610f41846110d3565b604051602001610f52929190611748565b6040516020818303038152906040525b9392505050565b8080610f7d57506001600160a01b03821615155b1561103f576000610f8d84610b1c565b90506001600160a01b03831615801590610fb95750826001600160a01b0316816001600160a01b031614155b8015610fcc5750610fca8184610a60565b155b15610ff55760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016105cf565b811561103d5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b61107a838383611166565b610654576001600160a01b0383166110a857604051637e27328960e01b8152600481018290526024016105cf565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016105cf565b606060006110e0836111c9565b600101905060008167ffffffffffffffff81111561110057611100611396565b6040519080825280601f01601f19166020018201604052801561112a576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461113457509392505050565b60006001600160a01b0383161580159061089c5750826001600160a01b0316846001600160a01b031614806111a057506111a08484610a60565b8061089c5750506000908152600460205260409020546001600160a01b03908116911614919050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112085772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611234576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061125257662386f26fc10000830492506010015b6305f5e100831061126a576305f5e100830492506008015b612710831061127e57612710830492506004015b60648310611290576064830492506002015b600a83106104c75760010192915050565b6001600160e01b031981168114610ac957600080fd5b6000602082840312156112c957600080fd5b8135610f62816112a1565b60005b838110156112ef5781810151838201526020016112d7565b50506000910152565b600081518084526113108160208601602086016112d4565b601f01601f19169290920160200192915050565b602081526000610f6260208301846112f8565b60006020828403121561134957600080fd5b5035919050565b80356001600160a01b038116811461136757600080fd5b919050565b6000806040838503121561137f57600080fd5b61138883611350565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156113c7576113c7611396565b604051601f8501601f19908116603f011681019082821181831017156113ef576113ef611396565b8160405280935085815286868601111561140857600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261143357600080fd5b610f62838335602085016113ac565b6000806040838503121561145557600080fd5b82359150602083013567ffffffffffffffff81111561147357600080fd5b61147f85828601611422565b9150509250929050565b60008060006060848603121561149e57600080fd5b6114a784611350565b92506114b560208501611350565b9150604084013590509250925092565b6000602082840312156114d757600080fd5b813567ffffffffffffffff8111156114ee57600080fd5b61089c84828501611422565b60006020828403121561150c57600080fd5b610f6282611350565b6000806040838503121561152857600080fd5b61153183611350565b91506020830135801515811461154657600080fd5b809150509250929050565b6000806000806080858703121561156757600080fd5b61157085611350565b935061157e60208601611350565b925060408501359150606085013567ffffffffffffffff8111156115a157600080fd5b8501601f810187136115b257600080fd5b6115c1878235602084016113ac565b91505092959194509250565b600080604083850312156115e057600080fd5b6115e983611350565b91506115f760208401611350565b90509250929050565b600181811c9082168061161457607f821691505b60208210810361163457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561065457600081815260208120601f850160051c810160208610156116615750805b601f850160051c820191505b818110156116805782815560010161166d565b505050505050565b815167ffffffffffffffff8111156116a2576116a2611396565b6116b6816116b08454611600565b8461163a565b602080601f8311600181146116eb57600084156116d35750858301515b600019600386901b1c1916600185901b178555611680565b600085815260208120601f198616915b8281101561171a578886015182559484019460019091019084016116fb565b50858210156117385787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000835161175a8184602088016112d4565b83519083019061176e8183602088016112d4565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104c7576104c7611777565b80820281158282048414176104c7576104c7611777565b6000600182016117c9576117c9611777565b5060010190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611803908301846112f8565b9695505050505050565b60006020828403121561181f57600080fd5b8151610f62816112a156fea2646970667358221220889e6c2bce9940dbe4667cb7f06b8086cb82d05f9684cc1c24b7ff1937c1c58b64736f6c63430008140033";

type AuthMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuthMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuthMe__factory extends ContractFactory {
  constructor(...args: AuthMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    baseURI_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      baseURI_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    baseURI_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, baseURI_, overrides || {}) as Promise<
      AuthMe & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AuthMe__factory {
    return super.connect(runner) as AuthMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuthMeInterface {
    return new Interface(_abi) as AuthMeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AuthMe {
    return new Contract(address, _abi, runner) as unknown as AuthMe;
  }
}
