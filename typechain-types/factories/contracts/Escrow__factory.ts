/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../common";
import type { Escrow, EscrowInterface } from "../../contracts/Escrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_escrowAgent",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Cancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "InEscrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "ItemReceived",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "amount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyer",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyerReceivedItem",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmItemReceived",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seller",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum Escrow.State",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260405161094838038061094883398101604081905261002291610088565b600080546001600160a01b039384166001600160a01b0319918216179091556001805482163317905560028054929093169116179055346003556004805461ffff191690556100bb565b80516001600160a01b038116811461008357600080fd5b919050565b6000806040838503121561009b57600080fd5b6100a48361006c565b91506100b26020840161006c565b90509250929050565b61087e806100ca6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637150d8ae116100665780637150d8ae14610175578063aa8c217c14610188578063c19d93fb1461019f578063ea8a1af0146101be578063f83d08ba146101c657610093565b806308551a53146101165780630c4b2ce114610146578063207ac3b1146101505780634e71d92d1461016d575b60405162461bcd60e51b815260206004820152604760248201527f66616c6c6261636b2066756e6374696f6e2063616c6c65643a2064697265637460448201527f207061796d656e74206e6f74206163636570746564206279207468697320636f606482015266373a3930b1ba1760c91b608482015260a4015b60405180910390fd5b600054610129906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61014e6101ce565b005b60045461015d9060ff1681565b604051901515815260200161013d565b61014e6102c6565b600154610129906001600160a01b031681565b61019160035481565b60405190815260200161013d565b6004546101b190610100900460ff1681565b60405161013d919061078e565b61014e610453565b61014e6105fc565b6001546001600160a01b031633146101f85760405162461bcd60e51b815260040161010d906107b6565b6001600454610100900460ff16600381111561021657610216610778565b1461027d5760405162461bcd60e51b815260206004820152603160248201527f657363726f77206973206e6f742061637469766520796574202d206861766520604482015270796f75206c6f636b65642066756e64733f60781b606482015260840161010d565b6004805460ff191660011790556040517f01e74d1f4f418e68629246efc4a29d98199e9c9b9c3653bdbfee74d2ad4ac6a3906102bc9042815260200190565b60405180910390a1565b6000546001600160a01b0316331461032f5760405162461bcd60e51b815260206004820152602660248201527f6f6e6c79207468652053656c6c65722063616e2063616c6c20746869732066756044820152653731ba34b7b760d11b606482015260840161010d565b6001600454610100900460ff16600381111561034d5761034d610778565b1461039a5760405162461bcd60e51b815260206004820152601760248201527f6e6f742079657420696e20657363726f77207374617465000000000000000000604482015260640161010d565b60045460ff166103fc5760405162461bcd60e51b815260206004820152602760248201527f627579657220686173206e6f7420636f6e6669726d65642072656365697074206044820152666f66206974656d60c81b606482015260840161010d565b6104046106d0565b61040c61072c565b6004805461ff001916610200179055600354604080519182524260208301527fc83b5086ce94ec8d5a88a9f5fea4b18a522bb238ed0d2d8abd959549a80c16b891016102bc565b6000546001600160a01b031633148061047657506001546001600160a01b031633145b6104da5760405162461bcd60e51b815260206004820152602f60248201527f6f6e6c7920746865204275796572206f722053656c6c65722063616e2063616c60448201526e36103a3434b990333ab731ba34b7b760891b606482015260840161010d565b6000600454610100900460ff1660038111156104f8576104f8610778565b148061053457506001600454610100900460ff16600381111561051d5761051d610778565b14801561053457506000546001600160a01b031633145b6105805760405162461bcd60e51b815260206004820152601a60248201527f657363726f772063616e6e6f742062652063616e63656c6c6564000000000000604482015260640161010d565b6001546003546040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156105bc573d6000803e3d6000fd5b506004805461ff0019166103001790556040514281527fc41d93b8bfbf9fd7cf5bfe271fd649ab6a6fec0ea101c23b82a2a28eca2533a9906020016102bc565b6001546001600160a01b031633146106265760405162461bcd60e51b815260040161010d906107b6565b6000600454610100900460ff16600381111561064457610644610778565b146106915760405162461bcd60e51b815260206004820152601860248201527f657363726f7720697320616c7265616479206c6f636b65640000000000000000604482015260640161010d565b6004805461ff0019166101001790556040514281527f459a51414187c5fdcdbb3ca4c8e95a3bb4601dde82a52e6ba6ce900e3d0ff833906020016102bc565b6000606460035460636106e391906107fb565b6106ed9190610826565b600080546040519293506001600160a01b03169183156108fc0291849190818181858888f19350505050158015610728573d6000803e3d6000fd5b5050565b6000606460035461073d9190610826565b6002546040519192506001600160a01b03169082156108fc029083906000818181858888f19350505050158015610728573d6000803e3d6000fd5b634e487b7160e01b600052602160045260246000fd5b60208101600483106107b057634e487b7160e01b600052602160045260246000fd5b91905290565b60208082526025908201527f6f6e6c79207468652042757965722063616e2063616c6c20746869732066756e60408201526431ba34b7b760d91b606082015260800190565b808202811582820484141761082057634e487b7160e01b600052601160045260246000fd5b92915050565b60008261084357634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122082008adb013657eee0451fa021de72f0c7a5f45a77b5a64f3a592ff93d2fd09364736f6c63430008140033";

type EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Escrow__factory extends ContractFactory {
  constructor(...args: EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _seller: AddressLike,
    _escrowAgent: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_seller, _escrowAgent, overrides || {});
  }
  override deploy(
    _seller: AddressLike,
    _escrowAgent: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_seller, _escrowAgent, overrides || {}) as Promise<
      Escrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Escrow__factory {
    return super.connect(runner) as Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowInterface {
    return new Interface(_abi) as EscrowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Escrow {
    return new Contract(address, _abi, runner) as unknown as Escrow;
  }
}
